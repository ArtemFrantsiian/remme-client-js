syntax = "proto3";

message AtomicSwapMethod {
    enum Method {
        INIT = 0;
        APPROVE = 1;
        EXPIRE = 2;
        SET_SECRET_LOCK = 3;
        CLOSE = 4;
    }
}

message AtomicSwapInitPayload {
    string receiver_address = 1; // REMchain agent to receive funds
    string sender_address_non_local = 7; // Address to receive arranged equivalent on the other chain (non local one)
    uint64 amount = 2; // The amount to be transferred
    string swap_id = 3; // Swap unique id
    string secret_lock_by_solicitor = 4; // A secret lock, provided during initialisation, only if REMchain side is a solicitor (non initiator)
    string email_address_encrypted_by_initiator = 5; // An email address provided by swap initiator (Alice) to be notified of the next step
    uint32 created_at = 6; // Creation date in a timestamp format
}

message AtomicSwapApprovePayload {
    string swap_id = 1;
}

message AtomicSwapExpirePayload {
    string swap_id = 1;
}

message AtomicSwapSetSecretLockPayload {
    string swap_id = 1;
    string secret_lock = 2;
}

message AtomicSwapClosePayload {
    string swap_id = 1;
    string secret_key = 2;
}

message AtomicSwapInfo {
    bool is_closed = 1; // if the swap is closed and unavailable for actions upon it
    bool is_approved = 11; // if Alice approved the swap, initiated by herself
    string sender_address = 2; // Address of the agent on the REMchain side soliciting the exchange
    string sender_address_non_local = 12; // Address to receive arranged equivalent on the other chain (non local one)
    string receiver_address = 3; // REMchain agent to receive funds
    uint64 amount = 4; // The amount to be transferred
    string email_address_encrypted_optional = 5; // email address for solicitor (Bob) to notify the swap initiator (Alice)
    string swap_id = 6; // Swap unique id
    string secret_lock = 7; // A secret lock to successfuly match with a secret_key and close the swap
    string secret_key = 8; // Last step information, provided to as a secret for solicitor
    uint32 created_at = 9; // Creation date in a timestamp format
    bool is_initiator = 10; // check weather REMchain side initiated the swap (not a solicitor)
}