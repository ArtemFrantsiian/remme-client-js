syntax = "proto3";


message CertificateMethod {
    enum Method {
        STORE = 0;
        REVOKE = 1;
    }
}

message NewCertificatePayload {
    // A raw certificate file in DER encoding.
    string certificate_raw = 1;
    // SHA512 hash of certificate_raw signed by the user's private key on REMME
    // blockchain and then by the private key of the certificate. Needed to
    // verify, that the user actually owns the provided certificate.
    string signature_rem = 2;
    string signature_crt = 3;
    // TODO: Should be removed when we switch to node ECDSA keys
    // for certificate signing. As far as public key will be
    // a part of transaction payload
    string cert_signer_public_key = 4;
}

message RevokeCertificatePayload {
    // The address of a certificate in the storage generated by the transaction processor.
    string address = 1;
}

message CertificateStorage {
    // Hash of the certificate raw binary.
    string hash = 1;
    // The UID field of a certificate.
    string owner = 2;
    bool revoked = 3;
    // TODO: Exploit some of certificate fields to resolve hash collisions.
}